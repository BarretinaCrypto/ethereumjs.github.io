{"name":"ethereumjs","tagline":"Your Javascript gateway to Ethereum","body":"This is a collection of libraries and utilities for [Ethereum](https://ethereum.org).\r\n\r\n## Use cases\r\n\r\n### Creating an online wallet?\r\n\r\nCheck out [keythereum](https://github.com/ethereumjs/keythereum) for managing keys and [ethereumjs-tx](https://github.com/ethereumjs/ethereumjs-tx) for creating transactions with them.\r\n\r\n### Creating a Dapp?\r\n\r\nYou will need to interface with the Ethereum network. [web3.js](https://github.com/ethereumjs/web3.js) provides a complete RPC interface from Javascript. If looking for a more lightweight option, [ethereumjs-abi](https://github.com/axic/ethereumjs-abi) or [solidity.js](https://github.com/ethereumjs/solidity.js) can handle the ABI encoding.\r\n\r\n### Interested in running a node?\r\n\r\nSee [node-blockchain-server](https://github.com/ethereumjs/node-blockchain-server). It is in a pretty rough state at the moment, but at least can download the blockchain.\r\n\r\n## Full list of repos\r\n\r\n* [common](https://github.com/ethereumjs/common): the genesis data for the blockchain\r\n* [ethashjs](https://github.com/ethereumjs/ethashjs): [Ethash](https://github.com/ethereum/wiki/wiki/Ethash) in Javascript\r\n* [ethereumjs-abi](https://github.com/axic/ethereumjs-abi):  ABI encoding and decoding\r\n* [ethereumjs-account](https://github.com/ethereumjs/ethereumjs-account): account schema encoding, decoding and validation\r\n* [ethereumjs-block](https://github.com/ethereumjs/ethereumjs-block): block schema encoding, decoding and validation\r\n* [ethereumjs-blockchain](https://github.com/ethereumjs/ethereumjs-blockchain): manage a blockchain\r\n* [ethereumjs-codesim](https://github.com/axic/ethereumjs-codesim): run EVM or Solidity code and examine the output\r\n* [ethereumjs-lib](https://github.com/ethereumjs/ethereumjs-lib): meta package for loading the other ethereumjs- modules\r\n* [ethereumjs-testing](https://github.com/ethereumjs/ethereumjs-testing): transforms the [official test vectors](https://github.com/ethereum/tests) to a format suitable for ethereumjs\r\n* [ethereumjs-tx](https://github.com/ethereumjs/ethereumjs-tx): transaction creation, manipulation, signing and verification\r\n* [ethereumjs-util](https://github.com/ethereumjs/ethereumjs-util): a collection of frequently used methods by the other libraries\r\n* [ethereumjs-vm](https://github.com/ethereumjs/ethereumjs-vm): a complete EVM (Ethereum Virtual Machine) and state processing implementation\r\n* [geth.js](https://github.com/ethereumjs/geth.js): start and stop geth from Node.js\r\n* [keythereum](https://github.com/ethereumjs/keythereum): create, import and export Ethereum keys\r\n* [merkle-patricia-tree](https://github.com/ethereumjs/merkle-patricia-tree): This is an implementation of the modified merkle patricia tree as specified in the [Ethereum yellow paper](http://gavwood.com/Paper.pdf)\r\n* [node-blockchain-server](https://github.com/ethereumjs/node-blockchain-server): aims to provide a full Ethereum node implementation\r\n* [node-devp2p](https://github.com/ethereumjs/node-devp2p): implementation of the [RLPx](https://github.com/ethereum/devp2p/blob/master/rlpx.md) transport protocol for Ethereum (used between nodes)\r\n* [node-devp2p-dpt](https://github.com/ethereumjs/node-devp2p-dpt): implementation of the [RLPx](https://github.com/ethereum/devp2p/blob/master/rlpx.md) DPT (peer table) protocol for Ethereum\r\n* [organization](https://github.com/ethereumjs/organization) and [ideas](https://github.com/ethereumjs/ideas): plans and discussions\r\n* [rlp](https://github.com/ethereumjs/rlp): [RLP (Recursive Length Prefix)](https://github.com/ethereum/wiki/wiki/RLP) encoding and decoding\r\n* [solidity.js](https://github.com/ethereumjs/solidity.js): ABI encoding and decoding (the relevant code split out from web3.js)\r\n* [web3.js](https://github.com/ethereumjs/web3.js): the complete API as seen in [geth](https://github.com/ethereum/go-ethereum)\r\n\r\n## Contributing and contact\r\n\r\nPlease check out [organization](https://github.com/ethereumjs/organization) and [ideas](https://github.com/ethereumjs/ideas) repos first.  Contributing to each of the projects is preferably done via pull requests.\r\n\r\nYou can also reach out on:\r\n* [Gitter](https://gitter.im/ethereum/ethereumjs-lib)\r\n* #ethereumjs on freenode\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}